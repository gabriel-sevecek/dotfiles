# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc. Initialization code that may require console input (password prompts, [y/n] confirmations, etc.) must go above this block; everything else may go below. if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

[ -f ~/.zshrc_work ] && source ~/.zshrc_work

# aliases
alias n='nvim'
alias ls='ls --color'
alias mutt='neomutt'
alias n='nvim'
alias vim='nvim'
alias srg='rg -g "*.scss"'
alias grg='rg -g "*.graphql"'
alias trg='rg -g "*.tsx" -g "*.ts"'
alias hrg='rg -g "*.html"'
alias prg='rg -g "*.py"'
alias hs='fc -l 0 | grep'
alias end='timew stop && xss-lock -l xsecurelock & sudo systemctl suspend'
alias bat='bat --theme Nord'
alias d='docker'
alias g='git'
alias h='fc -l 1'
alias timestamp='date +%s%3N'
alias s='kitty +kitten ssh'
alias ch='chezmoi'

# history
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000
setopt appendhistory
setopt INC_APPEND_HISTORY
setopt EXTENDED_HISTORY

zinit light ninrod/pass-zsh-completion

zinit ice depth=1
zinit light romkatv/powerlevel10k

zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-autosuggestions

zinit ice wait'1' lucid
zinit light changyuheng/fz
zinit light rupa/z

# The following lines were added by compinstall
zstyle :compinstall filename '~/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
#
zstyle ':completion:*' menu select
autoload bashcompinit
bashcompinit

zinit snippet OMZ::plugins/docker/_docker
zinit snippet OMZP::fzf
zinit ice as"completion"
zinit snippet https://git.zx2c4.com/password-store/plain/src/completion/pass.zsh-completion

export PYENV_ROOT="$HOME/.pyenv"
if [ -d "$PYENV_ROOT" ]; then
    export PYENV_ROOT
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
fi

export WORKON_HOME=~/.virtualenvs
[ -f "/usr/bin/virtualenvwrapper.sh" ] && source /usr/bin/virtualenvwrapper.sh

export LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8
export EDITOR=nvim

export PATH="$HOME/go/bin:$PATH"

# Stack stuff
export PATH="$HOME/.local/bin:$PATH"

bindkey -e
bindkey "\e[3~" delete-char
bindkey \^J backward-kill-line

function update() {
    updates=`checkupdates`
    kernel=`echo $updates | grep -c "linux "` # the space at the end is important
    zfs=`echo $updates | grep -c "zfs-linux "`

    kernellts=`echo $updates | grep -c "linux-lts"` 
    zfslts=`echo $updates | grep -c "zfs-linux-lts "`

    if [[ ( $kernel -eq "1" && $zfs -eq "0" ) || ( $kernellts -eq "1" && $zfslts -eq "0" )  ]] ; then
        echo "$updates\n"
        echo "Nope!"
    else
        sudo pacman -Syu
    fi
}

if [ -n "${commands[fzf-share]}" ]; then
  source "$(fzf-share)/key-bindings.zsh"
  source "$(fzf-share)/completion.zsh"
fi

export FZF_DEFAULT_COMMAND='fd --type f'

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[ ! -f ~/.p10k.zsh ] || source ~/.p10k.zsh

export WORDCHARS=""

if [ -e ~/.nix-profile/etc/profile.d/nix.sh ]; then . ~/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
  . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi

eval "$(direnv hook zsh)"

# Following line fixes locale warnings in nix bash
if [ -e /usr/lib/locale/locale-archive ]; then
    export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive
fi

[ -f /usr/share/nvm/init-nvm.sh ] && source /usr/share/nvm/init-nvm.sh
[ -f ~/.ghcup/env ] && source ~/.ghcup/env # ghcup-env

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

if [ -e "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh" ]; then . "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"; fi # added by Nix installer
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
